#include <AFMotor.h>
#include <ros.h>
#include <std_msgs/Int16.h>

// defining pins and variables
#define lefts A0
#define rights A1

// defining motors
AF_DCMotor motor1(1, MOTOR12_1KHZ);
AF_DCMotor motor2(2, MOTOR12_1KHZ);
AF_DCMotor motor3(3, MOTOR34_1KHZ);
AF_DCMotor motor4(4, MOTOR34_1KHZ);

// Create ROS node handle
ros::NodeHandle nh;

// Create ROS publishers
std_msgs::Int16 left_sensor_msg;
ros::Publisher left_sensor_pub("left_sensor", &left_sensor_msg);

std_msgs::Int16 right_sensor_msg;
ros::Publisher right_sensor_pub("right_sensor", &right_sensor_msg);

void setup() {
  // Setting the motor speed
  motor1.setSpeed(255);
  motor2.setSpeed(255);
  motor3.setSpeed(255);
  motor4.setSpeed(255);

  // Declaring PIN input types
  pinMode(lefts, INPUT);
  pinMode(rights, INPUT);

  // Begin serial communication
  Serial.begin(9600);

  // Initialize ROS publishers
  nh.initNode();
  nh.advertise(left_sensor_pub);
  nh.advertise(right_sensor_pub);
}

void loop() {
  // Reading values of the sensors
  left_sensor_msg.data = analogRead(lefts);
  right_sensor_msg.data = analogRead(rights);

  // Publishing sensor values
  left_sensor_pub.publish(&left_sensor_msg);
  right_sensor_pub.publish(&right_sensor_msg);

  // Handle ROS communication
  nh.spinOnce();

  // Line detected by both
  if (analogRead(lefts) <= 350 && analogRead(rights) <= 350) {
    // Forward
    motor1.run(FORWARD);
    motor2.run(FORWARD);
    motor3.run(FORWARD);
    motor4.run(FORWARD);
  }
  // Line detected by left sensor
  else if (analogRead(lefts) <= 350 && analogRead(rights) > 350) {
    // Turn left
    motor1.run(FORWARD);
    motor2.run(FORWARD);
    motor3.run(BACKWARD);
    motor4.run(BACKWARD);
  }
  // Line detected by right sensor
  else if (analogRead(lefts) > 350 && analogRead(rights) <= 350) {
    // Turn right
    motor1.run(BACKWARD);
    motor2.run(BACKWARD);
    motor3.run(FORWARD);
    motor4.run(FORWARD);
  }
  // Line detected by none
  else if (analogRead(lefts) > 350 && analogRead(rights) > 350) {
    // Stop
    motor1.run(RELEASE);
    motor2.run(RELEASE);
    motor3.run(RELEASE);
    motor4.run(RELEASE);
  }
}
